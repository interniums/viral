/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/stats/route";
exports.ids = ["app/api/stats/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstats%2Froute&page=%2Fapi%2Fstats%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstats%2Froute.ts&appDir=C%3A%5CUsers%5CWhite_Prince%5CDesktop%5Cviral%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CWhite_Prince%5CDesktop%5Cviral&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstats%2Froute&page=%2Fapi%2Fstats%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstats%2Froute.ts&appDir=C%3A%5CUsers%5CWhite_Prince%5CDesktop%5Cviral%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CWhite_Prince%5CDesktop%5Cviral&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var C_Users_White_Prince_Desktop_viral_app_api_stats_route_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/api/stats/route.ts */ \"(rsc)/./app/api/stats/route.ts\");\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/stats/route\",\n        pathname: \"/api/stats\",\n        filename: \"route\",\n        bundlePath: \"app/api/stats/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\White_Prince\\\\Desktop\\\\viral\\\\app\\\\api\\\\stats\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_White_Prince_Desktop_viral_app_api_stats_route_ts__WEBPACK_IMPORTED_MODULE_2__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/stats/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzdGF0cyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGc3RhdHMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZzdGF0cyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNXaGl0ZV9QcmluY2UlNUNEZXNrdG9wJTVDdmlyYWwlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q1doaXRlX1ByaW5jZSU1Q0Rlc2t0b3AlNUN2aXJhbCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDZ0M7QUFDL0Y7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDaUo7O0FBRWpKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdmlyYWwtdHJlbmRpbmctZnJvbnRlbmQvP2U2NjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcV2hpdGVfUHJpbmNlXFxcXERlc2t0b3BcXFxcdmlyYWxcXFxcYXBwXFxcXGFwaVxcXFxzdGF0c1xcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc3RhdHMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9zdGF0c1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvc3RhdHMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxXaGl0ZV9QcmluY2VcXFxcRGVza3RvcFxcXFx2aXJhbFxcXFxhcHBcXFxcYXBpXFxcXHN0YXRzXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3N0YXRzL3JvdXRlXCI7XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstats%2Froute&page=%2Fapi%2Fstats%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstats%2Froute.ts&appDir=C%3A%5CUsers%5CWhite_Prince%5CDesktop%5Cviral%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CWhite_Prince%5CDesktop%5Cviral&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/stats/route.ts":
/*!********************************!*\
  !*** ./app/api/stats/route.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_services_dataFetcher__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/services/dataFetcher */ \"(rsc)/./lib/services/dataFetcher.ts\");\n\n\n// Force dynamic rendering for this API route\nconst dynamic = \"force-dynamic\";\nasync function GET() {\n    try {\n        const stats = await _lib_services_dataFetcher__WEBPACK_IMPORTED_MODULE_1__.dataFetcherService.getStats();\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            ...stats,\n            cached: false\n        });\n    } catch (error) {\n        console.error(\"Error in stats API:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: false,\n            error: \"Failed to fetch stats\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL3N0YXRzL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEM7QUFDNEI7QUFFdEUsNkNBQTZDO0FBQ3RDLE1BQU1FLFVBQVUsZ0JBQWU7QUFFL0IsZUFBZUM7SUFDcEIsSUFBSTtRQUNGLE1BQU1DLFFBQVEsTUFBTUgseUVBQWtCQSxDQUFDSSxRQUFRO1FBRS9DLE9BQU9MLGtGQUFZQSxDQUFDTSxJQUFJLENBQUM7WUFDdkJDLFNBQVM7WUFDVCxHQUFHSCxLQUFLO1lBQ1JJLFFBQVE7UUFDVjtJQUNGLEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsdUJBQXVCQTtRQUNyQyxPQUFPVCxrRkFBWUEsQ0FBQ00sSUFBSSxDQUN0QjtZQUNFQyxTQUFTO1lBQ1RFLE9BQU87UUFDVCxHQUNBO1lBQUVFLFFBQVE7UUFBSTtJQUVsQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdmlyYWwtdHJlbmRpbmctZnJvbnRlbmQvLi9hcHAvYXBpL3N0YXRzL3JvdXRlLnRzPzhkZjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInXHJcbmltcG9ydCB7IGRhdGFGZXRjaGVyU2VydmljZSB9IGZyb20gJy4uLy4uLy4uL2xpYi9zZXJ2aWNlcy9kYXRhRmV0Y2hlcidcclxuXHJcbi8vIEZvcmNlIGR5bmFtaWMgcmVuZGVyaW5nIGZvciB0aGlzIEFQSSByb3V0ZVxyXG5leHBvcnQgY29uc3QgZHluYW1pYyA9ICdmb3JjZS1keW5hbWljJ1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVCgpIHtcclxuICB0cnkge1xyXG4gICAgY29uc3Qgc3RhdHMgPSBhd2FpdCBkYXRhRmV0Y2hlclNlcnZpY2UuZ2V0U3RhdHMoKVxyXG5cclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XHJcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgIC4uLnN0YXRzLFxyXG4gICAgICBjYWNoZWQ6IGZhbHNlLFxyXG4gICAgfSlcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gc3RhdHMgQVBJOicsIGVycm9yKVxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICB7XHJcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXHJcbiAgICAgICAgZXJyb3I6ICdGYWlsZWQgdG8gZmV0Y2ggc3RhdHMnLFxyXG4gICAgICB9LFxyXG4gICAgICB7IHN0YXR1czogNTAwIH1cclxuICAgIClcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImRhdGFGZXRjaGVyU2VydmljZSIsImR5bmFtaWMiLCJHRVQiLCJzdGF0cyIsImdldFN0YXRzIiwianNvbiIsInN1Y2Nlc3MiLCJjYWNoZWQiLCJlcnJvciIsImNvbnNvbGUiLCJzdGF0dXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/api/stats/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/cache.ts":
/*!**********************!*\
  !*** ./lib/cache.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CACHE_KEYS: () => (/* binding */ CACHE_KEYS),\n/* harmony export */   CacheManager: () => (/* binding */ CacheManager),\n/* harmony export */   cacheManager: () => (/* binding */ cacheManager)\n/* harmony export */ });\nclass CacheManager {\n    constructor(cacheDurationSeconds = 900){\n        this.cacheDuration = cacheDurationSeconds;\n        this.memoryCache = new Map();\n    }\n    getCachedData(key) {\n        const entry = this.memoryCache.get(key);\n        if (entry) {\n            const elapsed = Date.now() - entry.timestamp;\n            if (elapsed < this.cacheDuration * 1000) {\n                return entry.data;\n            }\n        }\n        return null;\n    }\n    setCachedData(key, data) {\n        this.memoryCache.set(key, {\n            data,\n            timestamp: Date.now()\n        });\n    }\n    isCacheValid(key) {\n        return this.getCachedData(key) !== null;\n    }\n    getCacheInfo(key) {\n        const entry = this.memoryCache.get(key);\n        if (entry) {\n            const elapsed = Date.now() - entry.timestamp;\n            const remaining = Math.max(0, this.cacheDuration * 1000 - elapsed);\n            return {\n                exists: remaining > 0,\n                ttl_seconds: Math.floor(remaining / 1000),\n                ttl_minutes: Math.floor(remaining / 60000)\n            };\n        }\n        return {\n            exists: false,\n            ttl_seconds: 0,\n            ttl_minutes: 0\n        };\n    }\n    clearCache(key) {\n        if (key) {\n            this.memoryCache.delete(key);\n        } else {\n            this.memoryCache.clear();\n        }\n    }\n}\n// Global cache manager instance\nconst cacheManager = new CacheManager();\n// Cache keys (simplified for new architecture)\nconst CACHE_KEYS = {\n    all_trending_topics: \"viral:trending:all_topics\",\n    stats: \"viral:stats:overview\",\n    last_update: \"viral:last_update\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvY2FjaGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBV08sTUFBTUE7SUFJWEMsWUFBWUMsdUJBQXVCLEdBQUcsQ0FBRTtRQUN0QyxJQUFJLENBQUNDLGFBQWEsR0FBR0Q7UUFDckIsSUFBSSxDQUFDRSxXQUFXLEdBQUcsSUFBSUM7SUFDekI7SUFFQUMsY0FBaUJDLEdBQVcsRUFBWTtRQUN0QyxNQUFNQyxRQUFRLElBQUksQ0FBQ0osV0FBVyxDQUFDSyxHQUFHLENBQUNGO1FBQ25DLElBQUlDLE9BQU87WUFDVCxNQUFNRSxVQUFVQyxLQUFLQyxHQUFHLEtBQUtKLE1BQU1LLFNBQVM7WUFDNUMsSUFBSUgsVUFBVSxJQUFJLENBQUNQLGFBQWEsR0FBRyxNQUFNO2dCQUN2QyxPQUFPSyxNQUFNTSxJQUFJO1lBQ25CO1FBQ0Y7UUFDQSxPQUFPO0lBQ1Q7SUFFQUMsY0FBaUJSLEdBQVcsRUFBRU8sSUFBTyxFQUFRO1FBQzNDLElBQUksQ0FBQ1YsV0FBVyxDQUFDWSxHQUFHLENBQUNULEtBQUs7WUFDeEJPO1lBQ0FELFdBQVdGLEtBQUtDLEdBQUc7UUFDckI7SUFDRjtJQUVBSyxhQUFhVixHQUFXLEVBQVc7UUFDakMsT0FBTyxJQUFJLENBQUNELGFBQWEsQ0FBQ0MsU0FBUztJQUNyQztJQUVBVyxhQUFhWCxHQUFXLEVBQWE7UUFDbkMsTUFBTUMsUUFBUSxJQUFJLENBQUNKLFdBQVcsQ0FBQ0ssR0FBRyxDQUFDRjtRQUNuQyxJQUFJQyxPQUFPO1lBQ1QsTUFBTUUsVUFBVUMsS0FBS0MsR0FBRyxLQUFLSixNQUFNSyxTQUFTO1lBQzVDLE1BQU1NLFlBQVlDLEtBQUtDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQ2xCLGFBQWEsR0FBRyxPQUFPTztZQUMxRCxPQUFPO2dCQUNMWSxRQUFRSCxZQUFZO2dCQUNwQkksYUFBYUgsS0FBS0ksS0FBSyxDQUFDTCxZQUFZO2dCQUNwQ00sYUFBYUwsS0FBS0ksS0FBSyxDQUFDTCxZQUFZO1lBQ3RDO1FBQ0Y7UUFDQSxPQUFPO1lBQUVHLFFBQVE7WUFBT0MsYUFBYTtZQUFHRSxhQUFhO1FBQUU7SUFDekQ7SUFFQUMsV0FBV25CLEdBQVksRUFBUTtRQUM3QixJQUFJQSxLQUFLO1lBQ1AsSUFBSSxDQUFDSCxXQUFXLENBQUN1QixNQUFNLENBQUNwQjtRQUMxQixPQUFPO1lBQ0wsSUFBSSxDQUFDSCxXQUFXLENBQUN3QixLQUFLO1FBQ3hCO0lBQ0Y7QUFDRjtBQUVBLGdDQUFnQztBQUN6QixNQUFNQyxlQUFlLElBQUk3QixlQUFjO0FBRTlDLCtDQUErQztBQUN4QyxNQUFNOEIsYUFBYTtJQUN4QkMscUJBQXFCO0lBQ3JCQyxPQUFPO0lBQ1BDLGFBQWE7QUFDZixFQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdmlyYWwtdHJlbmRpbmctZnJvbnRlbmQvLi9saWIvY2FjaGUudHM/N2NiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbnRlcmZhY2UgQ2FjaGVFbnRyeTxUPiB7XHJcbiAgZGF0YTogVFxyXG4gIHRpbWVzdGFtcDogbnVtYmVyXHJcbn1cclxuXHJcbmludGVyZmFjZSBDYWNoZUluZm8ge1xyXG4gIGV4aXN0czogYm9vbGVhblxyXG4gIHR0bF9zZWNvbmRzOiBudW1iZXJcclxuICB0dGxfbWludXRlczogbnVtYmVyXHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBDYWNoZU1hbmFnZXIge1xyXG4gIHByaXZhdGUgY2FjaGVEdXJhdGlvbjogbnVtYmVyXHJcbiAgcHJpdmF0ZSBtZW1vcnlDYWNoZTogTWFwPHN0cmluZywgQ2FjaGVFbnRyeTxhbnk+PlxyXG5cclxuICBjb25zdHJ1Y3RvcihjYWNoZUR1cmF0aW9uU2Vjb25kcyA9IDkwMCkge1xyXG4gICAgdGhpcy5jYWNoZUR1cmF0aW9uID0gY2FjaGVEdXJhdGlvblNlY29uZHNcclxuICAgIHRoaXMubWVtb3J5Q2FjaGUgPSBuZXcgTWFwKClcclxuICB9XHJcblxyXG4gIGdldENhY2hlZERhdGE8VD4oa2V5OiBzdHJpbmcpOiBUIHwgbnVsbCB7XHJcbiAgICBjb25zdCBlbnRyeSA9IHRoaXMubWVtb3J5Q2FjaGUuZ2V0KGtleSlcclxuICAgIGlmIChlbnRyeSkge1xyXG4gICAgICBjb25zdCBlbGFwc2VkID0gRGF0ZS5ub3coKSAtIGVudHJ5LnRpbWVzdGFtcFxyXG4gICAgICBpZiAoZWxhcHNlZCA8IHRoaXMuY2FjaGVEdXJhdGlvbiAqIDEwMDApIHtcclxuICAgICAgICByZXR1cm4gZW50cnkuZGF0YVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbnVsbFxyXG4gIH1cclxuXHJcbiAgc2V0Q2FjaGVkRGF0YTxUPihrZXk6IHN0cmluZywgZGF0YTogVCk6IHZvaWQge1xyXG4gICAgdGhpcy5tZW1vcnlDYWNoZS5zZXQoa2V5LCB7XHJcbiAgICAgIGRhdGEsXHJcbiAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKSxcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICBpc0NhY2hlVmFsaWQoa2V5OiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLmdldENhY2hlZERhdGEoa2V5KSAhPT0gbnVsbFxyXG4gIH1cclxuXHJcbiAgZ2V0Q2FjaGVJbmZvKGtleTogc3RyaW5nKTogQ2FjaGVJbmZvIHtcclxuICAgIGNvbnN0IGVudHJ5ID0gdGhpcy5tZW1vcnlDYWNoZS5nZXQoa2V5KVxyXG4gICAgaWYgKGVudHJ5KSB7XHJcbiAgICAgIGNvbnN0IGVsYXBzZWQgPSBEYXRlLm5vdygpIC0gZW50cnkudGltZXN0YW1wXHJcbiAgICAgIGNvbnN0IHJlbWFpbmluZyA9IE1hdGgubWF4KDAsIHRoaXMuY2FjaGVEdXJhdGlvbiAqIDEwMDAgLSBlbGFwc2VkKVxyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIGV4aXN0czogcmVtYWluaW5nID4gMCxcclxuICAgICAgICB0dGxfc2Vjb25kczogTWF0aC5mbG9vcihyZW1haW5pbmcgLyAxMDAwKSxcclxuICAgICAgICB0dGxfbWludXRlczogTWF0aC5mbG9vcihyZW1haW5pbmcgLyA2MDAwMCksXHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB7IGV4aXN0czogZmFsc2UsIHR0bF9zZWNvbmRzOiAwLCB0dGxfbWludXRlczogMCB9XHJcbiAgfVxyXG5cclxuICBjbGVhckNhY2hlKGtleT86IHN0cmluZyk6IHZvaWQge1xyXG4gICAgaWYgKGtleSkge1xyXG4gICAgICB0aGlzLm1lbW9yeUNhY2hlLmRlbGV0ZShrZXkpXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLm1lbW9yeUNhY2hlLmNsZWFyKClcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8vIEdsb2JhbCBjYWNoZSBtYW5hZ2VyIGluc3RhbmNlXHJcbmV4cG9ydCBjb25zdCBjYWNoZU1hbmFnZXIgPSBuZXcgQ2FjaGVNYW5hZ2VyKClcclxuXHJcbi8vIENhY2hlIGtleXMgKHNpbXBsaWZpZWQgZm9yIG5ldyBhcmNoaXRlY3R1cmUpXHJcbmV4cG9ydCBjb25zdCBDQUNIRV9LRVlTID0ge1xyXG4gIGFsbF90cmVuZGluZ190b3BpY3M6ICd2aXJhbDp0cmVuZGluZzphbGxfdG9waWNzJyxcclxuICBzdGF0czogJ3ZpcmFsOnN0YXRzOm92ZXJ2aWV3JyxcclxuICBsYXN0X3VwZGF0ZTogJ3ZpcmFsOmxhc3RfdXBkYXRlJyxcclxufSBhcyBjb25zdFxyXG4iXSwibmFtZXMiOlsiQ2FjaGVNYW5hZ2VyIiwiY29uc3RydWN0b3IiLCJjYWNoZUR1cmF0aW9uU2Vjb25kcyIsImNhY2hlRHVyYXRpb24iLCJtZW1vcnlDYWNoZSIsIk1hcCIsImdldENhY2hlZERhdGEiLCJrZXkiLCJlbnRyeSIsImdldCIsImVsYXBzZWQiLCJEYXRlIiwibm93IiwidGltZXN0YW1wIiwiZGF0YSIsInNldENhY2hlZERhdGEiLCJzZXQiLCJpc0NhY2hlVmFsaWQiLCJnZXRDYWNoZUluZm8iLCJyZW1haW5pbmciLCJNYXRoIiwibWF4IiwiZXhpc3RzIiwidHRsX3NlY29uZHMiLCJmbG9vciIsInR0bF9taW51dGVzIiwiY2xlYXJDYWNoZSIsImRlbGV0ZSIsImNsZWFyIiwiY2FjaGVNYW5hZ2VyIiwiQ0FDSEVfS0VZUyIsImFsbF90cmVuZGluZ190b3BpY3MiLCJzdGF0cyIsImxhc3RfdXBkYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/cache.ts\n");

/***/ }),

/***/ "(rsc)/./lib/constants/enums.ts":
/*!********************************!*\
  !*** ./lib/constants/enums.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Platform: () => (/* binding */ Platform),\n/* harmony export */   PlatformCategory: () => (/* binding */ PlatformCategory),\n/* harmony export */   PlatformStatus: () => (/* binding */ PlatformStatus),\n/* harmony export */   Topic: () => (/* binding */ Topic),\n/* harmony export */   TopicCategory: () => (/* binding */ TopicCategory)\n/* harmony export */ });\n// Platform Enums\nvar Platform;\n(function(Platform) {\n    Platform[\"Reddit\"] = \"Reddit\";\n    Platform[\"YouTube\"] = \"YouTube\";\n    Platform[\"GoogleTrends\"] = \"Google Trends\";\n    Platform[\"HackerNews\"] = \"Hacker News\";\n    Platform[\"GitHub\"] = \"GitHub\";\n    Platform[\"StackOverflow\"] = \"Stack Overflow\";\n    Platform[\"ProductHunt\"] = \"Product Hunt\";\n    Platform[\"Twitch\"] = \"Twitch\";\n    Platform[\"Mastodon\"] = \"Mastodon\";\n    Platform[\"GNews\"] = \"GNews\";\n    Platform[\"CoinGecko\"] = \"CoinGecko\";\n    Platform[\"DevTo\"] = \"Dev.to\";\n    Platform[\"Steam\"] = \"Steam\";\n    Platform[\"TheGuardian\"] = \"The Guardian\";\n    Platform[\"Binance\"] = \"Binance\";\n})(Platform || (Platform = {}));\nvar PlatformCategory;\n(function(PlatformCategory) {\n    PlatformCategory[\"Social\"] = \"social\";\n    PlatformCategory[\"News\"] = \"news\";\n    PlatformCategory[\"Tech\"] = \"tech\";\n    PlatformCategory[\"Gaming\"] = \"gaming\";\n    PlatformCategory[\"Crypto\"] = \"crypto\";\n    PlatformCategory[\"Entertainment\"] = \"entertainment\";\n})(PlatformCategory || (PlatformCategory = {}));\nvar PlatformStatus;\n(function(PlatformStatus) {\n    PlatformStatus[\"Active\"] = \"active\";\n    PlatformStatus[\"Demo\"] = \"demo\";\n    PlatformStatus[\"Beta\"] = \"beta\";\n})(PlatformStatus || (PlatformStatus = {}));\nvar Topic;\n(function(Topic) {\n    Topic[\"General\"] = \"general\";\n    Topic[\"Technology\"] = \"technology\";\n    Topic[\"Programming\"] = \"programming\";\n    Topic[\"ArtificialIntelligence\"] = \"artificial-intelligence\";\n    Topic[\"AI\"] = \"ai\";\n    Topic[\"Frontend\"] = \"frontend\";\n    Topic[\"Backend\"] = \"backend\";\n    Topic[\"Mobile\"] = \"mobile\";\n    Topic[\"Database\"] = \"database\";\n    Topic[\"DevOps\"] = \"devops\";\n    Topic[\"Security\"] = \"security\";\n    Topic[\"Blockchain\"] = \"blockchain\";\n    Topic[\"OpenSource\"] = \"open-source\";\n    Topic[\"Entertainment\"] = \"entertainment\";\n    Topic[\"Memes\"] = \"memes\";\n    Topic[\"Finance\"] = \"finance\";\n    Topic[\"Business\"] = \"business\";\n    Topic[\"Startups\"] = \"startups\";\n    Topic[\"Products\"] = \"products\";\n    Topic[\"Gaming\"] = \"gaming\";\n    Topic[\"FPS\"] = \"fps\";\n    Topic[\"MOBA\"] = \"moba\";\n    Topic[\"BattleRoyale\"] = \"battle-royale\";\n    Topic[\"Sandbox\"] = \"sandbox\";\n    Topic[\"RPG\"] = \"rpg\";\n    Topic[\"Strategy\"] = \"strategy\";\n    Topic[\"Simulation\"] = \"simulation\";\n    Topic[\"News\"] = \"news\";\n    Topic[\"World\"] = \"world\";\n    Topic[\"Politics\"] = \"politics\";\n    Topic[\"Environment\"] = \"environment\";\n    Topic[\"Health\"] = \"health\";\n    Topic[\"Crypto\"] = \"crypto\";\n    Topic[\"Cryptocurrency\"] = \"cryptocurrency\";\n    Topic[\"DeFi\"] = \"defi\";\n    Topic[\"MemeCoins\"] = \"meme-coins\";\n    Topic[\"MajorCrypto\"] = \"major-crypto\";\n    Topic[\"Trending\"] = \"trending\";\n    Topic[\"Declining\"] = \"declining\";\n    Topic[\"Lifestyle\"] = \"lifestyle\";\n    Topic[\"Culture\"] = \"culture\";\n    Topic[\"SocialMedia\"] = \"social-media\";\n    Topic[\"Sports\"] = \"sports\";\n})(Topic || (Topic = {}));\nvar TopicCategory;\n(function(TopicCategory) {\n    TopicCategory[\"General\"] = \"general\";\n    TopicCategory[\"Technology\"] = \"technology\";\n    TopicCategory[\"Entertainment\"] = \"entertainment\";\n    TopicCategory[\"Finance\"] = \"finance\";\n    TopicCategory[\"Gaming\"] = \"gaming\";\n    TopicCategory[\"News\"] = \"news\";\n    TopicCategory[\"Crypto\"] = \"crypto\";\n    TopicCategory[\"Lifestyle\"] = \"lifestyle\";\n    TopicCategory[\"Sports\"] = \"sports\";\n    TopicCategory[\"Politics\"] = \"politics\";\n})(TopicCategory || (TopicCategory = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvY29uc3RhbnRzL2VudW1zLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsaUJBQWlCOztVQUNMQTs7Ozs7Ozs7Ozs7Ozs7OztHQUFBQSxhQUFBQTs7VUFrQkFDOzs7Ozs7O0dBQUFBLHFCQUFBQTs7VUFTQUM7Ozs7R0FBQUEsbUJBQUFBOztVQU9BQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FBQUEsVUFBQUE7O1VBOENBQzs7Ozs7Ozs7Ozs7R0FBQUEsa0JBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdmlyYWwtdHJlbmRpbmctZnJvbnRlbmQvLi9saWIvY29uc3RhbnRzL2VudW1zLnRzP2YyMmEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gUGxhdGZvcm0gRW51bXNcclxuZXhwb3J0IGVudW0gUGxhdGZvcm0ge1xyXG4gIFJlZGRpdCA9ICdSZWRkaXQnLFxyXG4gIFlvdVR1YmUgPSAnWW91VHViZScsXHJcbiAgR29vZ2xlVHJlbmRzID0gJ0dvb2dsZSBUcmVuZHMnLFxyXG4gIEhhY2tlck5ld3MgPSAnSGFja2VyIE5ld3MnLFxyXG4gIEdpdEh1YiA9ICdHaXRIdWInLFxyXG4gIFN0YWNrT3ZlcmZsb3cgPSAnU3RhY2sgT3ZlcmZsb3cnLFxyXG4gIFByb2R1Y3RIdW50ID0gJ1Byb2R1Y3QgSHVudCcsXHJcbiAgVHdpdGNoID0gJ1R3aXRjaCcsXHJcbiAgTWFzdG9kb24gPSAnTWFzdG9kb24nLFxyXG4gIEdOZXdzID0gJ0dOZXdzJyxcclxuICBDb2luR2Vja28gPSAnQ29pbkdlY2tvJyxcclxuICBEZXZUbyA9ICdEZXYudG8nLFxyXG4gIFN0ZWFtID0gJ1N0ZWFtJyxcclxuICBUaGVHdWFyZGlhbiA9ICdUaGUgR3VhcmRpYW4nLFxyXG4gIEJpbmFuY2UgPSAnQmluYW5jZScsXHJcbn1cclxuXHJcbmV4cG9ydCBlbnVtIFBsYXRmb3JtQ2F0ZWdvcnkge1xyXG4gIFNvY2lhbCA9ICdzb2NpYWwnLFxyXG4gIE5ld3MgPSAnbmV3cycsXHJcbiAgVGVjaCA9ICd0ZWNoJyxcclxuICBHYW1pbmcgPSAnZ2FtaW5nJyxcclxuICBDcnlwdG8gPSAnY3J5cHRvJyxcclxuICBFbnRlcnRhaW5tZW50ID0gJ2VudGVydGFpbm1lbnQnLFxyXG59XHJcblxyXG5leHBvcnQgZW51bSBQbGF0Zm9ybVN0YXR1cyB7XHJcbiAgQWN0aXZlID0gJ2FjdGl2ZScsXHJcbiAgRGVtbyA9ICdkZW1vJyxcclxuICBCZXRhID0gJ2JldGEnLFxyXG59XHJcblxyXG4vLyBUb3BpYyBFbnVtc1xyXG5leHBvcnQgZW51bSBUb3BpYyB7XHJcbiAgR2VuZXJhbCA9ICdnZW5lcmFsJyxcclxuICBUZWNobm9sb2d5ID0gJ3RlY2hub2xvZ3knLFxyXG4gIFByb2dyYW1taW5nID0gJ3Byb2dyYW1taW5nJyxcclxuICBBcnRpZmljaWFsSW50ZWxsaWdlbmNlID0gJ2FydGlmaWNpYWwtaW50ZWxsaWdlbmNlJyxcclxuICBBSSA9ICdhaScsXHJcbiAgRnJvbnRlbmQgPSAnZnJvbnRlbmQnLFxyXG4gIEJhY2tlbmQgPSAnYmFja2VuZCcsXHJcbiAgTW9iaWxlID0gJ21vYmlsZScsXHJcbiAgRGF0YWJhc2UgPSAnZGF0YWJhc2UnLFxyXG4gIERldk9wcyA9ICdkZXZvcHMnLFxyXG4gIFNlY3VyaXR5ID0gJ3NlY3VyaXR5JyxcclxuICBCbG9ja2NoYWluID0gJ2Jsb2NrY2hhaW4nLFxyXG4gIE9wZW5Tb3VyY2UgPSAnb3Blbi1zb3VyY2UnLFxyXG4gIEVudGVydGFpbm1lbnQgPSAnZW50ZXJ0YWlubWVudCcsXHJcbiAgTWVtZXMgPSAnbWVtZXMnLFxyXG4gIEZpbmFuY2UgPSAnZmluYW5jZScsXHJcbiAgQnVzaW5lc3MgPSAnYnVzaW5lc3MnLFxyXG4gIFN0YXJ0dXBzID0gJ3N0YXJ0dXBzJyxcclxuICBQcm9kdWN0cyA9ICdwcm9kdWN0cycsXHJcbiAgR2FtaW5nID0gJ2dhbWluZycsXHJcbiAgRlBTID0gJ2ZwcycsXHJcbiAgTU9CQSA9ICdtb2JhJyxcclxuICBCYXR0bGVSb3lhbGUgPSAnYmF0dGxlLXJveWFsZScsXHJcbiAgU2FuZGJveCA9ICdzYW5kYm94JyxcclxuICBSUEcgPSAncnBnJyxcclxuICBTdHJhdGVneSA9ICdzdHJhdGVneScsXHJcbiAgU2ltdWxhdGlvbiA9ICdzaW11bGF0aW9uJyxcclxuICBOZXdzID0gJ25ld3MnLFxyXG4gIFdvcmxkID0gJ3dvcmxkJyxcclxuICBQb2xpdGljcyA9ICdwb2xpdGljcycsXHJcbiAgRW52aXJvbm1lbnQgPSAnZW52aXJvbm1lbnQnLFxyXG4gIEhlYWx0aCA9ICdoZWFsdGgnLFxyXG4gIENyeXB0byA9ICdjcnlwdG8nLFxyXG4gIENyeXB0b2N1cnJlbmN5ID0gJ2NyeXB0b2N1cnJlbmN5JyxcclxuICBEZUZpID0gJ2RlZmknLFxyXG4gIE1lbWVDb2lucyA9ICdtZW1lLWNvaW5zJyxcclxuICBNYWpvckNyeXB0byA9ICdtYWpvci1jcnlwdG8nLFxyXG4gIFRyZW5kaW5nID0gJ3RyZW5kaW5nJyxcclxuICBEZWNsaW5pbmcgPSAnZGVjbGluaW5nJyxcclxuICBMaWZlc3R5bGUgPSAnbGlmZXN0eWxlJyxcclxuICBDdWx0dXJlID0gJ2N1bHR1cmUnLFxyXG4gIFNvY2lhbE1lZGlhID0gJ3NvY2lhbC1tZWRpYScsXHJcbiAgU3BvcnRzID0gJ3Nwb3J0cycsXHJcbn1cclxuXHJcbmV4cG9ydCBlbnVtIFRvcGljQ2F0ZWdvcnkge1xyXG4gIEdlbmVyYWwgPSAnZ2VuZXJhbCcsXHJcbiAgVGVjaG5vbG9neSA9ICd0ZWNobm9sb2d5JyxcclxuICBFbnRlcnRhaW5tZW50ID0gJ2VudGVydGFpbm1lbnQnLFxyXG4gIEZpbmFuY2UgPSAnZmluYW5jZScsXHJcbiAgR2FtaW5nID0gJ2dhbWluZycsXHJcbiAgTmV3cyA9ICduZXdzJyxcclxuICBDcnlwdG8gPSAnY3J5cHRvJyxcclxuICBMaWZlc3R5bGUgPSAnbGlmZXN0eWxlJyxcclxuICBTcG9ydHMgPSAnc3BvcnRzJyxcclxuICBQb2xpdGljcyA9ICdwb2xpdGljcycsXHJcbn1cclxuXHJcbi8vIEhlbHBlciB0eXBlc1xyXG5leHBvcnQgdHlwZSBQbGF0Zm9ybUtleSA9IGtleW9mIHR5cGVvZiBQbGF0Zm9ybVxyXG5leHBvcnQgdHlwZSBUb3BpY0tleSA9IGtleW9mIHR5cGVvZiBUb3BpY1xyXG5leHBvcnQgdHlwZSBQbGF0Zm9ybUNhdGVnb3J5S2V5ID0ga2V5b2YgdHlwZW9mIFBsYXRmb3JtQ2F0ZWdvcnlcclxuZXhwb3J0IHR5cGUgVG9waWNDYXRlZ29yeUtleSA9IGtleW9mIHR5cGVvZiBUb3BpY0NhdGVnb3J5XHJcbiJdLCJuYW1lcyI6WyJQbGF0Zm9ybSIsIlBsYXRmb3JtQ2F0ZWdvcnkiLCJQbGF0Zm9ybVN0YXR1cyIsIlRvcGljIiwiVG9waWNDYXRlZ29yeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/constants/enums.ts\n");

/***/ }),

/***/ "(rsc)/./lib/services/dataFetcher.ts":
/*!*************************************!*\
  !*** ./lib/services/dataFetcher.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataFetcherService: () => (/* binding */ DataFetcherService),\n/* harmony export */   dataFetcherService: () => (/* binding */ dataFetcherService)\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../supabase */ \"(rsc)/./lib/supabase.ts\");\n/* harmony import */ var _cache__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cache */ \"(rsc)/./lib/cache.ts\");\n/* harmony import */ var _constants_enums__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants/enums */ \"(rsc)/./lib/constants/enums.ts\");\n\n\n\nconst DATABASE_RETENTION_DAYS = 7;\nconst MAX_TOPICS_PER_PLATFORM = 200;\nconst MAX_TOTAL_TOPICS = 500;\n// Database cleanup configuration\nconst CLEANUP_CONFIG = {\n    RETENTION_DAYS: 7,\n    BATCH_SIZE: 1000,\n    CLEANUP_INTERVAL_HOURS: 24\n};\n// Initialize empty stats records\nconst emptyPlatformStats = Object.values(_constants_enums__WEBPACK_IMPORTED_MODULE_2__.Platform).reduce((acc, platform)=>({\n        ...acc,\n        [platform]: 0\n    }), {});\nconst emptyTopicStats = Object.values(_constants_enums__WEBPACK_IMPORTED_MODULE_2__.Topic).reduce((acc, topic)=>({\n        ...acc,\n        [topic]: 0\n    }), {});\nclass DataFetcherService {\n    setServices(services) {\n        this.services = services;\n    }\n    async updateDatabaseWithFreshData() {\n        try {\n            const freshData = [];\n            // Fetch data from each service\n            for (const [serviceName, service] of Object.entries(this.services)){\n                try {\n                    const topics = await service.fetchTrendingTopics();\n                    const data = topics.slice(0, 50).map((topic)=>{\n                        // Ensure Product Hunt topics have a minimum score\n                        let score = topic.score;\n                        if (topic.platform === _constants_enums__WEBPACK_IMPORTED_MODULE_2__.Platform.ProductHunt && (!score || score < 50)) {\n                            score = 50 // Minimum base score for Product Hunt topics\n                            ;\n                        }\n                        // Ensure platform value matches enum - try exact match first\n                        let platformValue = Object.values(_constants_enums__WEBPACK_IMPORTED_MODULE_2__.Platform).find((p)=>p === topic.platform);\n                        if (!platformValue) {\n                            // Try normalized matching as fallback\n                            platformValue = Object.values(_constants_enums__WEBPACK_IMPORTED_MODULE_2__.Platform).find((p)=>p.toLowerCase().replace(/\\s+/g, \"\") === topic.platform.toLowerCase().replace(/\\s+/g, \"\"));\n                        }\n                        // If no match found, skip this topic\n                        if (!platformValue) {\n                            return null;\n                        }\n                        // Ensure topic value matches enum - try exact match first\n                        let topicValue = Object.values(_constants_enums__WEBPACK_IMPORTED_MODULE_2__.Topic).find((t)=>t === topic.topic);\n                        if (!topicValue) {\n                            // Try normalized matching as fallback\n                            topicValue = Object.values(_constants_enums__WEBPACK_IMPORTED_MODULE_2__.Topic).find((t)=>t.toLowerCase().replace(/[\\s_]+/g, \"-\") === topic.topic.toLowerCase().replace(/[\\s_]+/g, \"-\"));\n                        }\n                        // Default to General if no match\n                        if (!topicValue) {\n                            topicValue = _constants_enums__WEBPACK_IMPORTED_MODULE_2__.Topic.General;\n                        }\n                        return {\n                            platform: platformValue,\n                            title: topic.title,\n                            description: topic.description,\n                            url: topic.url,\n                            score: Math.min(Math.round(score), 2147483647),\n                            engagement: Math.min(topic.engagement, 2147483647),\n                            category: topic.category,\n                            topic: topicValue,\n                            tags: topic.tags,\n                            author: topic.author,\n                            timestamp: topic.timestamp\n                        };\n                    }).filter(Boolean) // Remove null entries from skipped topics\n                    ;\n                    freshData.push(...data);\n                } catch (error) {\n                    console.error(`❌ ${serviceName} API failed:`, error);\n                }\n            }\n            // Update database with fresh data\n            if (freshData.length > 0) {\n                // Remove old data (older than DATABASE_RETENTION_DAYS days)\n                const weekAgo = new Date();\n                weekAgo.setDate(weekAgo.getDate() - DATABASE_RETENTION_DAYS);\n                // Delete old data\n                const { error: deleteError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"trending_topics\").delete().lt(\"timestamp\", weekAgo.toISOString());\n                if (deleteError) {\n                    if (deleteError.code === \"42P01\") {\n                        console.warn(\"Database table does not exist yet. Please run the Supabase setup script.\");\n                        return;\n                    }\n                    console.error(\"Error deleting old data:\", deleteError);\n                }\n                // Insert data in batches to avoid timeouts and handle duplicates\n                const batchSize = 50;\n                const batches = [];\n                for(let i = 0; i < freshData.length; i += batchSize){\n                    batches.push(freshData.slice(i, i + batchSize));\n                }\n                for(let i = 0; i < batches.length; i++){\n                    const batch = batches[i];\n                    try {\n                        // Try to insert the batch\n                        const { error: insertError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"trending_topics\").insert(batch);\n                        // If there's a duplicate key error, insert records one by one\n                        if (insertError?.code === \"23505\") {\n                            for (const topic of batch){\n                                try {\n                                    // Delete any existing record with the same platform and title\n                                    await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"trending_topics\").delete().eq(\"platform\", topic.platform).eq(\"title\", topic.title);\n                                    // Insert the new record\n                                    await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"trending_topics\").insert(topic);\n                                } catch (error) {\n                                // Silent fail for individual topic insertions\n                                }\n                            }\n                        } else if (insertError) {\n                            console.error(`Error inserting batch ${i + 1}:`, insertError);\n                        }\n                    } catch (error) {\n                        console.error(`Error processing batch ${i + 1}:`, error);\n                    }\n                }\n                // Clear cache to force fresh data on next request\n                _cache__WEBPACK_IMPORTED_MODULE_1__.cacheManager.clearCache();\n            }\n        } catch (error) {\n            console.error(\"Background update failed:\", error);\n        }\n    }\n    async fetchTrendingTopics(sortBy = \"random\", sortOrder = \"desc\", limit = 100, offset = 0) {\n        try {\n            // Check cache first\n            const cachedData = _cache__WEBPACK_IMPORTED_MODULE_1__.cacheManager.getCachedData(_cache__WEBPACK_IMPORTED_MODULE_1__.CACHE_KEYS.all_trending_topics);\n            if (cachedData) {\n                // Apply sorting to cached data\n                const topics = [\n                    ...cachedData.topics\n                ];\n                if (sortBy === \"engagement\") {\n                    topics.sort((a, b)=>sortOrder === \"desc\" ? (b.engagement || 0) - (a.engagement || 0) : (a.engagement || 0) - (b.engagement || 0));\n                } else if (sortBy === \"date\") {\n                    topics.sort((a, b)=>sortOrder === \"desc\" ? new Date(b.timestamp || \"\").getTime() - new Date(a.timestamp || \"\").getTime() : new Date(a.timestamp || \"\").getTime() - new Date(b.timestamp || \"\").getTime());\n                }\n                // If sortBy is 'random', keep the random order from cache\n                return topics;\n            }\n            // If no cache, fetch from database\n            const weekAgo = new Date();\n            weekAgo.setDate(weekAgo.getDate() - DATABASE_RETENTION_DAYS);\n            let query = _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"trending_topics\").select(\"*\").gte(\"timestamp\", weekAgo.toISOString()).range(offset, offset + limit - 1);\n            // Apply sorting\n            if (sortBy === \"engagement\") {\n                query = query.order(\"engagement\", {\n                    ascending: sortOrder === \"asc\"\n                });\n            } else if (sortBy === \"date\") {\n                query = query.order(\"timestamp\", {\n                    ascending: sortOrder === \"asc\"\n                });\n            } else {\n                // Random order - we'll shuffle in memory\n                query = query.order(\"timestamp\", {\n                    ascending: false\n                });\n            }\n            const { data: results, error } = await query;\n            if (error) {\n                // Check if it's a table doesn't exist error\n                if (error.code === \"42P01\") {\n                    console.warn(\"Database table does not exist yet. Please run the Supabase setup script.\");\n                    return [];\n                }\n                console.error(\"Error fetching from Supabase:\", error);\n                return [];\n            }\n            // Convert to the expected format\n            const topics = (results || []).map((row)=>{\n                // Ensure platform value matches enum - try exact match first, then fallback to normalized match\n                let platformValue = Object.values(_constants_enums__WEBPACK_IMPORTED_MODULE_2__.Platform).find((p)=>p === row.platform);\n                if (!platformValue) {\n                    // Try normalized matching as fallback\n                    platformValue = Object.values(_constants_enums__WEBPACK_IMPORTED_MODULE_2__.Platform).find((p)=>p.toLowerCase().replace(/\\s+/g, \"\") === (row.platform || \"\").toLowerCase().replace(/\\s+/g, \"\"));\n                }\n                // If still no match, keep the original value but log it\n                if (!platformValue) {\n                    console.warn(`Unknown platform in database: \"${row.platform}\" - keeping original value`);\n                    platformValue = row.platform;\n                }\n                // Ensure topic value matches enum\n                let topicValue = Object.values(_constants_enums__WEBPACK_IMPORTED_MODULE_2__.Topic).find((t)=>t === row.topic);\n                if (!topicValue) {\n                    // Try normalized matching as fallback\n                    topicValue = Object.values(_constants_enums__WEBPACK_IMPORTED_MODULE_2__.Topic).find((t)=>t.toLowerCase().replace(/[\\s_]+/g, \"-\") === (row.topic || \"general\").toLowerCase().replace(/[\\s_]+/g, \"-\"));\n                }\n                // If still no match, default to General\n                if (!topicValue) {\n                    console.warn(`Unknown topic in database: \"${row.topic}\" - defaulting to General`);\n                    topicValue = _constants_enums__WEBPACK_IMPORTED_MODULE_2__.Topic.General;\n                }\n                // Convert data format\n                return {\n                    id: row.id,\n                    platform: platformValue,\n                    title: row.title,\n                    description: row.description || \"\",\n                    url: row.url || \"\",\n                    score: row.score || 0,\n                    engagement: row.engagement || 0,\n                    category: row.category || \"\",\n                    tags: row.tags || [],\n                    timestamp: row.timestamp || new Date().toISOString(),\n                    topic: topicValue,\n                    author: row.author || \"Unknown\",\n                    created_at: row.created_at\n                };\n            });\n            // Shuffle if random order requested\n            if (sortBy === \"random\") {\n                for(let i = topics.length - 1; i > 0; i--){\n                    const j = Math.floor(Math.random() * (i + 1));\n                    [topics[i], topics[j]] = [\n                        topics[j],\n                        topics[i]\n                    ];\n                }\n            }\n            // Cache the results (only for first page to avoid cache conflicts)\n            if (offset === 0) {\n                const cacheData = {\n                    topics: topics.slice(0, MAX_TOTAL_TOPICS),\n                    timestamp: new Date().toISOString()\n                };\n                _cache__WEBPACK_IMPORTED_MODULE_1__.cacheManager.setCachedData(_cache__WEBPACK_IMPORTED_MODULE_1__.CACHE_KEYS.all_trending_topics, cacheData);\n            }\n            return topics;\n        } catch (error) {\n            console.error(\"Error fetching trending topics:\", error);\n            return [];\n        }\n    }\n    /**\r\n   * Fetch ALL trending topics from the last 7 days\r\n   * Used by the client to cache all available data\r\n   */ async fetchAllTrendingTopics() {\n        try {\n            // Get all topics from the last 7 days\n            const weekAgo = new Date();\n            weekAgo.setDate(weekAgo.getDate() - DATABASE_RETENTION_DAYS);\n            const { data: results, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"trending_topics\").select(\"*\").gte(\"timestamp\", weekAgo.toISOString()).order(\"timestamp\", {\n                ascending: false\n            });\n            if (error) {\n                // Check if it's a table doesn't exist error\n                if (error.code === \"42P01\") {\n                    console.warn(\"Database table does not exist yet. Please run the Supabase setup script.\");\n                    return [];\n                }\n                console.error(\"Error fetching all topics from Supabase:\", error);\n                return [];\n            }\n            // Convert to the expected format\n            const topics = (results || []).map((row)=>{\n                // Ensure platform value matches enum - try exact match first\n                let platformValue = Object.values(_constants_enums__WEBPACK_IMPORTED_MODULE_2__.Platform).find((p)=>p === row.platform);\n                if (!platformValue) {\n                    // Try normalized matching as fallback\n                    platformValue = Object.values(_constants_enums__WEBPACK_IMPORTED_MODULE_2__.Platform).find((p)=>p.toLowerCase().replace(/\\s+/g, \"\") === (row.platform || \"\").toLowerCase().replace(/\\s+/g, \"\"));\n                }\n                // If still no match, keep the original value but log it\n                if (!platformValue) {\n                    console.warn(`Unknown platform in database: \"${row.platform}\" - keeping original value`);\n                    platformValue = row.platform;\n                }\n                // Ensure topic value matches enum\n                let topicValue = Object.values(_constants_enums__WEBPACK_IMPORTED_MODULE_2__.Topic).find((t)=>t === row.topic);\n                if (!topicValue) {\n                    // Try normalized matching as fallback\n                    topicValue = Object.values(_constants_enums__WEBPACK_IMPORTED_MODULE_2__.Topic).find((t)=>t.toLowerCase().replace(/[\\s_]+/g, \"-\") === (row.topic || \"general\").toLowerCase().replace(/[\\s_]+/g, \"-\"));\n                }\n                // If still no match, default to General\n                if (!topicValue) {\n                    console.warn(`Unknown topic in database: \"${row.topic}\" - defaulting to General`);\n                    topicValue = _constants_enums__WEBPACK_IMPORTED_MODULE_2__.Topic.General;\n                }\n                return {\n                    id: row.id,\n                    platform: platformValue,\n                    title: row.title,\n                    description: row.description || \"\",\n                    url: row.url || \"\",\n                    score: row.score || 0,\n                    engagement: row.engagement || 0,\n                    category: row.category || \"\",\n                    tags: row.tags || [],\n                    timestamp: row.timestamp || new Date().toISOString(),\n                    topic: topicValue,\n                    author: row.author || \"Unknown\",\n                    created_at: row.created_at\n                };\n            });\n            return topics;\n        } catch (error) {\n            console.error(\"Error fetching all trending topics:\", error);\n            return [];\n        }\n    }\n    async getStats() {\n        try {\n            const weekAgo = new Date();\n            weekAgo.setDate(weekAgo.getDate() - 7);\n            // Get platform counts from database using raw SQL\n            const { data: platformStats, error: platformError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.rpc(\"get_platform_stats\", {\n                days_ago: 7\n            });\n            if (platformError) {\n                console.error(\"Error fetching platform stats:\", platformError);\n                return {\n                    total_topics_7d: 0,\n                    total_topics_all_time: 0,\n                    platform_stats: emptyPlatformStats,\n                    category_stats: emptyTopicStats\n                };\n            }\n            // Convert to required format\n            const platformStatsMap = {\n                ...emptyPlatformStats\n            };\n            platformStats?.forEach((item)=>{\n                platformStatsMap[item.platform] = item.count;\n            });\n            // Get topic counts from database using raw SQL\n            const { data: topicStats, error: topicError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.rpc(\"get_topic_stats\", {\n                days_ago: 7\n            });\n            if (topicError) {\n                console.error(\"Error fetching topic stats:\", topicError);\n                return {\n                    total_topics_7d: 0,\n                    total_topics_all_time: 0,\n                    platform_stats: emptyPlatformStats,\n                    category_stats: emptyTopicStats\n                };\n            }\n            // Convert to required format\n            const topicStatsMap = {\n                ...emptyTopicStats\n            };\n            topicStats?.forEach((item)=>{\n                if (item.topic) {\n                    topicStatsMap[item.topic] = item.count;\n                }\n            });\n            // Get total topics in last 7 days\n            const totalTopics7d = Object.values(platformStatsMap).reduce((sum, count)=>sum + count, 0);\n            // Get total topics all time\n            const { count: totalTopicsAllTime, error: totalError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"trending_topics\").select(\"*\", {\n                count: \"exact\",\n                head: true\n            });\n            if (totalError) {\n                console.error(\"Error fetching total topics count:\", totalError);\n                return {\n                    total_topics_7d: totalTopics7d,\n                    total_topics_all_time: totalTopics7d,\n                    platform_stats: platformStatsMap,\n                    category_stats: topicStatsMap\n                };\n            }\n            return {\n                total_topics_7d: totalTopics7d,\n                total_topics_all_time: totalTopicsAllTime || totalTopics7d,\n                platform_stats: platformStatsMap,\n                category_stats: topicStatsMap\n            };\n        } catch (error) {\n            console.error(\"Error getting stats:\", error);\n            return {\n                total_topics_7d: 0,\n                total_topics_all_time: 0,\n                platform_stats: emptyPlatformStats,\n                category_stats: emptyTopicStats\n            };\n        }\n    }\n    /**\r\n   * Get total number of topics in the database\r\n   */ async getTotalTopicsCount() {\n        try {\n            const { count, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"trending_topics\").select(\"*\", {\n                count: \"exact\",\n                head: true\n            });\n            if (error) {\n                console.error(\"Error getting total topics count:\", error);\n                return 0;\n            }\n            return count || 0;\n        } catch (error) {\n            console.error(\"Error getting total topics count:\", error);\n            return 0;\n        }\n    }\n    /**\r\n   * Clean up old data from the database\r\n   * Removes data older than CLEANUP_CONFIG.RETENTION_DAYS days\r\n   */ async cleanupOldData() {\n        try {\n            const cutoffDate = new Date();\n            cutoffDate.setDate(cutoffDate.getDate() - CLEANUP_CONFIG.RETENTION_DAYS);\n            // First, count how many records will be deleted\n            const { count: totalToDelete, error: countError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"trending_topics\").select(\"*\", {\n                count: \"exact\",\n                head: true\n            }).lt(\"timestamp\", cutoffDate.toISOString());\n            if (countError) {\n                console.error(\"Error counting old records:\", countError);\n                return {\n                    deletedCount: 0,\n                    error: countError.message\n                };\n            }\n            if (!totalToDelete || totalToDelete === 0) {\n                return {\n                    deletedCount: 0\n                };\n            }\n            // Delete old data\n            const { error: deleteError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"trending_topics\").delete().lt(\"timestamp\", cutoffDate.toISOString());\n            if (deleteError) {\n                console.error(\"Error deleting old data:\", deleteError);\n                return {\n                    deletedCount: 0,\n                    error: deleteError.message\n                };\n            }\n            return {\n                deletedCount: totalToDelete\n            };\n        } catch (error) {\n            console.error(\"Error during database cleanup:\", error);\n            return {\n                deletedCount: 0,\n                error: error instanceof Error ? error.message : \"Unknown error\"\n            };\n        }\n    }\n    /**\r\n   * Get database size information\r\n   */ async getDatabaseSize() {\n        try {\n            const cutoffDate = new Date();\n            cutoffDate.setDate(cutoffDate.getDate() - CLEANUP_CONFIG.RETENTION_DAYS);\n            // Get total records\n            const { count: totalRecords, error: totalError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"trending_topics\").select(\"*\", {\n                count: \"exact\",\n                head: true\n            });\n            if (totalError) {\n                console.error(\"Error counting total records:\", totalError);\n                return {\n                    totalRecords: 0,\n                    oldRecords: 0,\n                    retentionDays: CLEANUP_CONFIG.RETENTION_DAYS\n                };\n            }\n            // Get old records count\n            const { count: oldRecords, error: oldError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"trending_topics\").select(\"*\", {\n                count: \"exact\",\n                head: true\n            }).lt(\"timestamp\", cutoffDate.toISOString());\n            if (oldError) {\n                console.error(\"Error counting old records:\", oldError);\n                return {\n                    totalRecords: totalRecords || 0,\n                    oldRecords: 0,\n                    retentionDays: CLEANUP_CONFIG.RETENTION_DAYS\n                };\n            }\n            return {\n                totalRecords: totalRecords || 0,\n                oldRecords: oldRecords || 0,\n                retentionDays: CLEANUP_CONFIG.RETENTION_DAYS\n            };\n        } catch (error) {\n            console.error(\"Error getting database size:\", error);\n            return {\n                totalRecords: 0,\n                oldRecords: 0,\n                retentionDays: CLEANUP_CONFIG.RETENTION_DAYS\n            };\n        }\n    }\n    constructor(){\n        this.services = {};\n    }\n}\nconst dataFetcherService = new DataFetcherService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/services/dataFetcher.ts\n");

/***/ }),

/***/ "(rsc)/./lib/supabase.ts":
/*!*************************!*\
  !*** ./lib/supabase.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n// Initialize Supabase client\nconst supabaseUrl = \"https://ewlwqxfzctmwczluhulz.supabase.co\" || 0;\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImV3bHdxeGZ6Y3Rtd2N6bHVodWx6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMyMTI0MjgsImV4cCI6MjA2ODc4ODQyOH0.6UVM0RzY4E4rR3KiQ44rbOBDUjUoY0bRkkphsg7-58s\" || 0;\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseKey);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc3VwYWJhc2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0Q7QUEyQnBELDZCQUE2QjtBQUM3QixNQUFNQyxjQUFjQywwQ0FBb0MsSUFBSTtBQUM1RCxNQUFNRyxjQUFjSCxrTkFBeUMsSUFBSTtBQUUxRCxNQUFNSyxXQUFXUCxtRUFBWUEsQ0FBQ0MsYUFBYUksYUFBWSIsInNvdXJjZXMiOlsid2VicGFjazovL3ZpcmFsLXRyZW5kaW5nLWZyb250ZW5kLy4vbGliL3N1cGFiYXNlLnRzP2M5OWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJ1xyXG5pbXBvcnQgeyBQbGF0Zm9ybSwgVG9waWMgfSBmcm9tICcuL2NvbnN0YW50cy9lbnVtcydcclxuXHJcbi8vIERhdGFiYXNlIHR5cGVzXHJcbmV4cG9ydCBpbnRlcmZhY2UgVHJlbmRpbmdUb3BpYyB7XHJcbiAgaWQ/OiBudW1iZXJcclxuICBwbGF0Zm9ybTogUGxhdGZvcm1cclxuICB0aXRsZTogc3RyaW5nXHJcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmdcclxuICB1cmw/OiBzdHJpbmdcclxuICBzY29yZT86IG51bWJlclxyXG4gIGVuZ2FnZW1lbnQ/OiBudW1iZXJcclxuICB0aW1lc3RhbXA/OiBzdHJpbmdcclxuICBjYXRlZ29yeT86IHN0cmluZ1xyXG4gIHRhZ3M/OiBzdHJpbmdbXVxyXG4gIHRvcGljPzogVG9waWNcclxuICBhdXRob3I/OiBzdHJpbmdcclxuICBjcmVhdGVkX2F0Pzogc3RyaW5nXHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGF0YWJhc2VTdGF0cyB7XHJcbiAgdG90YWxfdG9waWNzXzdkOiBudW1iZXJcclxuICB0b3RhbF90b3BpY3NfYWxsX3RpbWU6IG51bWJlclxyXG4gIHBsYXRmb3JtX3N0YXRzOiBSZWNvcmQ8UGxhdGZvcm0sIG51bWJlcj5cclxuICBjYXRlZ29yeV9zdGF0czogUmVjb3JkPFRvcGljLCBudW1iZXI+XHJcbn1cclxuXHJcbi8vIEluaXRpYWxpemUgU3VwYWJhc2UgY2xpZW50XHJcbmNvbnN0IHN1cGFiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIHx8ICcnXHJcbmNvbnN0IHN1cGFiYXNlS2V5ID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkgfHwgJydcclxuXHJcbmV4cG9ydCBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VLZXkpXHJcbiJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJzdXBhYmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzdXBhYmFzZUtleSIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIiwic3VwYWJhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/supabase.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/ws","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions","vendor-chunks/isows"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstats%2Froute&page=%2Fapi%2Fstats%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstats%2Froute.ts&appDir=C%3A%5CUsers%5CWhite_Prince%5CDesktop%5Cviral%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CWhite_Prince%5CDesktop%5Cviral&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();