"use strict";(()=>{var e={};e.id=402,e.ids=[402],e.modules={517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3590:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>d,originalPathname:()=>_,requestAsyncStorage:()=>u,routeModule:()=>i,serverHooks:()=>p,staticGenerationAsyncStorage:()=>c,staticGenerationBailout:()=>l});var s={};r.r(s),r.d(s,{GET:()=>GET});var o=r(884),n=r(6132),a=r(5798);async function GET(e){try{let t=e.headers.get("authorization");if(t!==`Bearer ${process.env.CRON_SECRET}`)return a.Z.json({error:"Unauthorized",message:"Invalid or missing CRON_SECRET"},{status:401});return a.Z.json({success:!0,message:"GitHub Actions cron job test successful!",timestamp:new Date().toISOString(),environment:"production",hasDatabaseUrl:!!process.env.DATABASE_URL})}catch(e){return console.error("❌ Test endpoint error:",e),a.Z.json({success:!1,error:"Test endpoint failed"},{status:500})}}let i=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/cron/test/route",pathname:"/api/cron/test",filename:"route",bundlePath:"app/api/cron/test/route"},resolvedPagePath:"C:\\Users\\White_Prince\\Desktop\\viral\\frontend\\app\\api\\cron\\test\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:u,staticGenerationAsyncStorage:c,serverHooks:p,headerHooks:d,staticGenerationBailout:l}=i,_="/api/cron/test/route"}};var t=require("../../../../webpack-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[997],()=>__webpack_exec__(3590));module.exports=r})();