"use strict";(()=>{var e={};e.id=276,e.ids=[276],e.modules={517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6588:(e,t,a)=>{a.r(t),a.d(t,{headerHooks:()=>p,originalPathname:()=>g,requestAsyncStorage:()=>u,routeModule:()=>i,serverHooks:()=>c,staticGenerationAsyncStorage:()=>d,staticGenerationBailout:()=>l});var r={};a.r(r),a.d(r,{GET:()=>GET});var o=a(884),s=a(6132),n=a(5798);async function GET(e){try{let t=e.headers.get("authorization");if(t!==`Bearer ${process.env.CRON_SECRET}`)return n.Z.json({error:"Unauthorized",message:"Invalid or missing CRON_SECRET"},{status:401});return console.log("⏰ GitHub Actions cron job triggered - updating database..."),n.Z.json({success:!0,message:"Cron endpoint is working (dataFetcher temporarily disabled)",timestamp:new Date().toISOString(),source:"github-actions"})}catch(e){return console.error("❌ GitHub Actions cron job failed:",e),n.Z.json({success:!1,error:"Cron endpoint failed",source:"github-actions"},{status:500})}}let i=new o.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/cron/update-database/route",pathname:"/api/cron/update-database",filename:"route",bundlePath:"app/api/cron/update-database/route"},resolvedPagePath:"C:\\Users\\White_Prince\\Desktop\\viral\\frontend\\app\\api\\cron\\update-database\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:u,staticGenerationAsyncStorage:d,serverHooks:c,headerHooks:p,staticGenerationBailout:l}=i,g="/api/cron/update-database/route"}};var t=require("../../../../webpack-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),a=t.X(0,[997],()=>__webpack_exec__(6588));module.exports=a})();